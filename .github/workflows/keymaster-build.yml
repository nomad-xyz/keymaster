# Documentation
# https://github.com/docker/metadata-action
# https://github.com/docker/login-action#google-container-registry-gcr
# https://github.com/docker/build-push-action
name: Push Keymaster Image to GCR GitHub Action
on:
  push:
    branches:
      - '**'
    tags:
      - '**'
  pull_request:

jobs:
  build-and-push-to-gcr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            gcr.io/nomad-xyz/keymaster
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}}
            type=sha

      - name: Login to GCR Docker repository
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCLOUD_SERVICE_KEY }}

      - name: Build and push container
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Get short git sha
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: gcr.io/nomad-xyz/keymaster:sha-${{ steps.vars.outputs.sha_short }}
          format: sarif
          output: trivy-results.sarif
          exit-code: '1'
          ignore-unfixed: true
          severity: CRITICAL,HIGH

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: trivy-results.sarif
